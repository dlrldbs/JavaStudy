package inheritance;

//상속관계의 클래스에서 참조변수와 객체와의 관계
public class MemberCastApp {
	public static void main(String[] args) {
		//부모클래스 참조변수=new 부모클래스(); 
		// => 부모클래스로 객체를 생성하여 부모클래스의 참조변수에 저장 : 가능
		Member member1=new Member();
		
		//참조변수에 저장된 객체를 사용하여 부모클래스의 메소드 호출
		member1.setId("aaa");
		member1.setName("홍길동");
		
		member1.display();
		System.out.println("==============================================================");
		//자식클래스 참조변수=new 자식클래스();
		// => 부모클래스의 객체와 자식클래스의 객체를 생성하고 자식클래스의 참조변수에는 
		//자식클래스의 객체 저장 : 가능
		MemberEvent member2=new MemberEvent();
		
		//참조변수에 저장된 자식클래스의 객체를 사용하여 자식클래스의 메소드 호출이 가능하며
		//부모클래스의 객체를 참조하여 부모클래스의 메소드 호출 가능
		member2.setId("bbb");
		member2.setName("임꺽정");
		member2.setEmail("bbb@itwill.xyz");
		
		member2.display();
		System.out.println("==============================================================");
		//자식클래스 참조변수=new 부모클래스();
		// => 부모클래스로 객체를 생성하여 자식클래스의 참조변수에 저장 : 불가능
		// => 자식클래스의 참조변수에는 자식클래스의 객체를 저장해야 되지만 자식클래스의
		//객체가 없으므로 에러 발생
		//MemberEvent member3=new Member();
		System.out.println("==============================================================");
		//부모클래스 참조변수=new 자식클래스();
		// => 부모클래스의 객체와 자식클래스의 객체를 생성하고 부모클래스의 참조변수에는 
		//부모클래스의 객체 저장 : 가능
		Member member4=new MemberEvent();
		
		//부모클래스의 참조변수에는 부모클래스의 객체가 저장되어 있으므로 부모클래스의 메소드 호출
		// => 부모클래스의 참조변수는 자식클래스의 객체를 참조할 수 없으므로 자식클래스의 메소드 호출 불가능 
		member4.setId("ccc");
		member4.setName("전우치");
		
		//객체 형변환을 이용하여 부모클래스의 참조변수로 자식클래스의 메소드 호출 가능
		// => 명시적 객체 형변환(강제 형변환), 묵시적 객체 형변환(자동 형변환)
		// => 상속관계의 클래스에서만 객체 형변환 사용 가능
		
		//명시적 객체 형변환 : Cast 연산자를 사용하여 부모클래스의 참조변수 자료형을 
		//자식클래스로 변경하면 일시적으로 참조변수에는 자식클래스의 객체가 자동 저장
		// => 명시적 객체 형변환에 의해 자식클래스로 자료형이 변경된 참조변수는 자식클래스의
		//객체를 참조할 수 있으므로 자식클래스의 메소드 호출 가능
		/*
		MemberEvent event=(MemberEvent)member4;
		event.setEmail("ccc@itwill.xyz");
		*/
		//Cast 연산자로 참조변수의 자료형을 자식클래스로 변경하고 자식클래스의 객체를 저장하고
		//자식클래스의 메소드 호출
		((MemberEvent)member4).setEmail("ccc@itwill.xyz");
		
		//((MemberEvent)member4).display();
		//묵시적 객체 형변환 : 부모클래스의 메소드를 오버라이드 선언된 자식클래스의 메소드는
		//부모클래스의 숨겨진 메소드 대신 자식클래스의 메소드를 호출하기 위해 참조변수의  
		//자료형이 자동으로 자식클래스로 변경되어 자식클래스의 객체를 참조하여 메소드 호출
		member4.display();
		System.out.println("==============================================================");
	}
}